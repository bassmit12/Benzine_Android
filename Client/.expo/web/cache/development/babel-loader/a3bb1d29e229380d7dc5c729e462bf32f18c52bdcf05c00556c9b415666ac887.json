{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TextInputComponent = function TextInputComponent(_ref) {\n  var labelText = _ref.labelText,\n    value = _ref.value,\n    onChangeText = _ref.onChangeText;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocus = _useState2[0],\n    setIsFocus = _useState2[1];\n  var renderLabel = function renderLabel() {\n    if (value || isFocus) {\n      return _jsx(Text, {\n        style: [styles.label, isFocus && {\n          color: \"blue\"\n        }],\n        children: labelText\n      });\n    }\n    return null;\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [renderLabel(), _jsx(View, {\n      style: [styles.inputContainer, isFocus && {\n        borderColor: \"blue\"\n      }],\n      children: _jsx(TextInput, {\n        style: styles.input,\n        placeholder: !isFocus ? labelText : \"...\",\n        value: value,\n        onFocus: function onFocus() {\n          return setIsFocus(true);\n        },\n        onBlur: function onBlur() {\n          return setIsFocus(false);\n        },\n        onChangeText: onChangeText\n      })\n    })]\n  });\n};\nexport default TextInputComponent;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    padding: 16\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    height: 50,\n    borderColor: \"gray\",\n    borderWidth: 0.5,\n    borderRadius: 8,\n    paddingHorizontal: 8\n  },\n  input: {\n    flex: 1,\n    height: \"100%\",\n    fontSize: 16\n  },\n  label: {\n    position: \"absolute\",\n    backgroundColor: \"white\",\n    left: 22,\n    top: 8,\n    zIndex: 999,\n    paddingHorizontal: 8,\n    fontSize: 14\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","jsx","_jsx","jsxs","_jsxs","TextInputComponent","_ref","labelText","value","onChangeText","_useState","_useState2","_slicedToArray","isFocus","setIsFocus","renderLabel","style","styles","label","color","children","container","inputContainer","borderColor","input","placeholder","onFocus","onBlur","create","backgroundColor","padding","flexDirection","alignItems","height","borderWidth","borderRadius","paddingHorizontal","flex","fontSize","position","left","top","zIndex"],"sources":["C:/Visual Studio Code Projects/Benzine/Benzine_Android/Client/src/components/TextInputComponent.js"],"sourcesContent":["// TextInputComponent.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, TextInput } from \"react-native\";\r\n\r\nconst TextInputComponent = ({ labelText, value, onChangeText }) => {\r\n  const [isFocus, setIsFocus] = useState(false);\r\n\r\n  const renderLabel = () => {\r\n    if (value || isFocus) {\r\n      return (\r\n        <Text style={[styles.label, isFocus && { color: \"blue\" }]}>\r\n          {labelText}\r\n        </Text>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {renderLabel()}\r\n      <View style={[styles.inputContainer, isFocus && { borderColor: \"blue\" }]}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder={!isFocus ? labelText : \"...\"}\r\n          value={value}\r\n          onFocus={() => setIsFocus(true)}\r\n          onBlur={() => setIsFocus(false)}\r\n          onChangeText={onChangeText}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TextInputComponent;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"white\",\r\n    padding: 16,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    height: 50,\r\n    borderColor: \"gray\",\r\n    borderWidth: 0.5,\r\n    borderRadius: 8,\r\n    paddingHorizontal: 8,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    height: \"100%\",\r\n    fontSize: 16,\r\n  },\r\n\r\n  label: {\r\n    position: \"absolute\",\r\n    backgroundColor: \"white\",\r\n    left: 22,\r\n    top: 8,\r\n    zIndex: 999,\r\n    paddingHorizontal: 8,\r\n    fontSize: 14,\r\n  },\r\n});\r\n"],"mappings":";AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAA2C;EAAA,IAArCC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,YAAY,GAAAH,IAAA,CAAZG,YAAY;EAC1D,IAAAC,SAAA,GAA8Bd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1B,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIP,KAAK,IAAIK,OAAO,EAAE;MACpB,OACEX,IAAA,CAACJ,IAAI;QAACkB,KAAK,EAAE,CAACC,MAAM,CAACC,KAAK,EAAEL,OAAO,IAAI;UAAEM,KAAK,EAAE;QAAO,CAAC,CAAE;QAAAC,QAAA,EACvDb;MAAS,CACN,CAAC;IAEX;IACA,OAAO,IAAI;EACb,CAAC;EAED,OACEH,KAAA,CAACL,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACI,SAAU;IAAAD,QAAA,GAC3BL,WAAW,CAAC,CAAC,EACdb,IAAA,CAACH,IAAI;MAACiB,KAAK,EAAE,CAACC,MAAM,CAACK,cAAc,EAAET,OAAO,IAAI;QAAEU,WAAW,EAAE;MAAO,CAAC,CAAE;MAAAH,QAAA,EACvElB,IAAA,CAACF,SAAS;QACRgB,KAAK,EAAEC,MAAM,CAACO,KAAM;QACpBC,WAAW,EAAE,CAACZ,OAAO,GAAGN,SAAS,GAAG,KAAM;QAC1CC,KAAK,EAAEA,KAAM;QACbkB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMZ,UAAU,CAAC,IAAI,CAAC;QAAA,CAAC;QAChCa,MAAM,EAAE,SAAAA,OAAA;UAAA,OAAMb,UAAU,CAAC,KAAK,CAAC;QAAA,CAAC;QAChCL,YAAY,EAAEA;MAAa,CAC5B;IAAC,CACE,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,eAAeJ,kBAAkB;AAEjC,IAAMY,MAAM,GAAGpB,UAAU,CAAC+B,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE;EACX,CAAC;EACDR,cAAc,EAAE;IACdS,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE,EAAE;IACVV,WAAW,EAAE,MAAM;IACnBW,WAAW,EAAE,GAAG;IAChBC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE;EACrB,CAAC;EACDZ,KAAK,EAAE;IACLa,IAAI,EAAE,CAAC;IACPJ,MAAM,EAAE,MAAM;IACdK,QAAQ,EAAE;EACZ,CAAC;EAEDpB,KAAK,EAAE;IACLqB,QAAQ,EAAE,UAAU;IACpBV,eAAe,EAAE,OAAO;IACxBW,IAAI,EAAE,EAAE;IACRC,GAAG,EAAE,CAAC;IACNC,MAAM,EAAE,GAAG;IACXN,iBAAiB,EAAE,CAAC;IACpBE,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
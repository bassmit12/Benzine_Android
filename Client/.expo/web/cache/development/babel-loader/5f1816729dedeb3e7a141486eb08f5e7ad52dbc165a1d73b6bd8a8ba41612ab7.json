{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport io from \"socket.io-client\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ShowKilometerScreen = function ShowKilometerScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    allData = _useState2[0],\n    setAllData = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    uniqueNames = _useState4[0],\n    setUniqueNames = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedName = _useState6[0],\n    setSelectedName = _useState6[1];\n  useEffect(function () {\n    fetchData();\n    var socket = io(\"https://measured-gentle-labrador.ngrok-free.app\");\n    socket.on(\"newTrip\", function (newTrip) {\n      setAllData(function (prevData) {\n        return [].concat(_toConsumableArray(prevData), [newTrip]);\n      });\n    });\n    return function () {\n      socket.disconnect();\n    };\n  }, []);\n  var fetchData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"https://measured-gentle-labrador.ngrok-free.app/trip/get\");\n        var result = yield response.json();\n        setAllData(result);\n        var uniqueNamesSet = new Set(result.map(function (entry) {\n          return entry.name;\n        }));\n        setUniqueNames(Array.from(uniqueNamesSet));\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    });\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleNamePress = function handleNamePress(name) {\n    setSelectedName(function (prevName) {\n      return prevName === name ? null : name;\n    });\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.column,\n        children: item.name\n      }), _jsx(Text, {\n        style: styles.column,\n        children: item.startKilometers\n      }), _jsx(Text, {\n        style: styles.column,\n        children: item.endKilometers\n      }), _jsx(Text, {\n        style: styles.column,\n        children: item.endKilometers - item.startKilometers\n      })]\n    });\n  };\n  var renderHeader = function renderHeader() {\n    return _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Name\"\n      }), _jsx(Text, {\n        style: styles.headerText,\n        children: \"Start\"\n      }), _jsx(Text, {\n        style: styles.headerText,\n        children: \"End\"\n      }), _jsx(Text, {\n        style: styles.headerText,\n        children: \"Total\"\n      })]\n    });\n  };\n  var filteredData = selectedName ? allData.filter(function (entry) {\n    return entry.name === selectedName;\n  }) : allData;\n  var sortedData = _toConsumableArray(filteredData).sort(function (a, b) {\n    return a.startKilometers - b.startKilometers;\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: sortedData,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      renderItem: renderItem,\n      ListHeaderComponent: renderHeader\n    }), _jsx(View, {\n      style: styles.namesContainer,\n      children: uniqueNames.map(function (name) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.nameButton, {\n            borderColor: selectedName === name ? \"lightgreen\" : \"blue\"\n          }],\n          onPress: function onPress() {\n            return handleNamePress(name);\n          },\n          children: _jsx(Text, {\n            style: styles.nameButtonText,\n            children: name\n          })\n        }, name);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 16,\n    backgroundColor: \"white\"\n  },\n  row: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"gray\",\n    paddingVertical: 8\n  },\n  column: {\n    flex: 1,\n    textAlign: \"center\",\n    fontSize: 16\n  },\n  header: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"black\",\n    paddingVertical: 8\n  },\n  headerText: {\n    flex: 1,\n    textAlign: \"center\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  namesContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: 16,\n    marginBottom: 8\n  },\n  nameButton: {\n    padding: 8,\n    borderRadius: 8,\n    borderWidth: 2,\n    borderColor: \"black\"\n  },\n  nameButtonText: {\n    fontSize: 16,\n    color: \"black\"\n  }\n});\nexport default ShowKilometerScreen;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","FlatList","Text","TouchableOpacity","io","jsx","_jsx","jsxs","_jsxs","ShowKilometerScreen","_useState","_useState2","_slicedToArray","allData","setAllData","_useState3","_useState4","uniqueNames","setUniqueNames","_useState5","_useState6","selectedName","setSelectedName","fetchData","socket","on","newTrip","prevData","concat","_toConsumableArray","disconnect","_ref","_asyncToGenerator","response","fetch","result","json","uniqueNamesSet","Set","map","entry","name","Array","from","error","console","apply","arguments","handleNamePress","prevName","renderItem","_ref2","item","style","styles","row","children","column","startKilometers","endKilometers","renderHeader","header","headerText","filteredData","filter","sortedData","sort","a","b","container","data","keyExtractor","_id","ListHeaderComponent","namesContainer","nameButton","borderColor","onPress","nameButtonText","create","flex","justifyContent","padding","backgroundColor","flexDirection","borderBottomWidth","paddingVertical","textAlign","fontSize","fontWeight","marginTop","marginBottom","borderRadius","borderWidth","color"],"sources":["C:/Visual Studio Code Projects/Benzine/Benzine_Android/Client/src/screens/ShowKilometerScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  FlatList,\r\n  Text,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst ShowKilometerScreen = () => {\r\n  const [allData, setAllData] = useState([]);\r\n  const [uniqueNames, setUniqueNames] = useState([]);\r\n  const [selectedName, setSelectedName] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    // Establish a websocket connection\r\n    const socket = io(\"https://measured-gentle-labrador.ngrok-free.app\");\r\n\r\n    // Listen for the 'newTrip' event\r\n    socket.on(\"newTrip\", (newTrip) => {\r\n      // Update state with the new trip\r\n      setAllData((prevData) => [...prevData, newTrip]);\r\n\r\n      // You may need to update uniqueNames here if needed\r\n    });\r\n\r\n    // Clean up the websocket connection when the component unmounts\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []); // Fetch data when the component mounts\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://measured-gentle-labrador.ngrok-free.app/trip/get\"\r\n      );\r\n      const result = await response.json();\r\n\r\n      setAllData(result);\r\n\r\n      // Extract unique names\r\n      const uniqueNamesSet = new Set(result.map((entry) => entry.name));\r\n      setUniqueNames(Array.from(uniqueNamesSet));\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleNamePress = (name) => {\r\n    setSelectedName((prevName) => (prevName === name ? null : name));\r\n  };\r\n\r\n  const renderItem = ({ item }) => (\r\n    <View style={styles.row}>\r\n      <Text style={styles.column}>{item.name}</Text>\r\n      <Text style={styles.column}>{item.startKilometers}</Text>\r\n      <Text style={styles.column}>{item.endKilometers}</Text>\r\n      <Text style={styles.column}>\r\n        {item.endKilometers - item.startKilometers}\r\n      </Text>\r\n    </View>\r\n  );\r\n\r\n  const renderHeader = () => (\r\n    <View style={styles.header}>\r\n      <Text style={styles.headerText}>Name</Text>\r\n      <Text style={styles.headerText}>Start</Text>\r\n      <Text style={styles.headerText}>End</Text>\r\n      <Text style={styles.headerText}>Total</Text>\r\n    </View>\r\n  );\r\n\r\n  const filteredData = selectedName\r\n    ? allData.filter((entry) => entry.name === selectedName)\r\n    : allData;\r\n\r\n  // Sort the filtered data based on startKilometers\r\n  const sortedData = [...filteredData].sort(\r\n    (a, b) => a.startKilometers - b.startKilometers\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={sortedData}\r\n        keyExtractor={(item) => item._id}\r\n        renderItem={renderItem}\r\n        ListHeaderComponent={renderHeader}\r\n      />\r\n\r\n      <View style={styles.namesContainer}>\r\n        {uniqueNames.map((name) => (\r\n          <TouchableOpacity\r\n            key={name}\r\n            style={[\r\n              styles.nameButton,\r\n              {\r\n                borderColor: selectedName === name ? \"lightgreen\" : \"blue\",\r\n              },\r\n            ]}\r\n            onPress={() => handleNamePress(name)}\r\n          >\r\n            <Text style={styles.nameButtonText}>{name}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    padding: 16,\r\n    backgroundColor: \"white\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    borderBottomWidth: 1,\r\n    borderColor: \"gray\",\r\n    paddingVertical: 8,\r\n  },\r\n  column: {\r\n    flex: 1,\r\n    textAlign: \"center\",\r\n    fontSize: 16,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    borderBottomWidth: 1,\r\n    borderColor: \"black\",\r\n    paddingVertical: 8,\r\n  },\r\n  headerText: {\r\n    flex: 1,\r\n    textAlign: \"center\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  namesContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    marginTop: 16,\r\n    marginBottom: 8,\r\n  },\r\n  nameButton: {\r\n    padding: 8,\r\n    borderRadius: 8,\r\n    borderWidth: 2,\r\n    borderColor: \"black\",\r\n  },\r\n  nameButtonText: {\r\n    fontSize: 16,\r\n    color: \"black\",\r\n  },\r\n});\r\n\r\nexport default ShowKilometerScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}